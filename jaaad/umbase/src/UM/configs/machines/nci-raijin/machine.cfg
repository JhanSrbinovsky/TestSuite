# Compiler flags for the NCI's Fujitsu Primergy 'Raijin'

# Defs related to building 64 bit executables
%machdefs64 C_LONG_LONG_INT=c_long_long_int \
          MPP=mpp \
          C_LOW_U=c_low_u \
          FRL8=frl8 \
          LINUX=linux \
          BUFRD_IO=bufrd_io \
          LITTLE_END=little_end \
          LINUX_INTEL_COMPILER=linux_intel_compiler

# Defs related to building 32 bit executables
%machdefs32 C_INT=c_int \
          MPP=mpp \
          C_LOW_U=c_low_u \
          LINUX=linux \
          BUFRD_IO=bufrd_io \
          LITTLE_END=little_end \
          LINUX_INTEL_COMPILER=linux_intel_compiler
      
# Extra dependencies
%mach_deps

# Standard names of the default bld::tools.
bld::tool::geninterface none
bld::tool::ar           ar

# Don't use the compiler to pre-process, runs much too slow
bld::tool::cpp          cpp
bld::tool::cppflags     
bld::tool::cflags       -O2 -xHost -g -fp-model precise

# UM code 'features' include some statements that depend on #ifdef lines
# being removed, instead of set to blank lines, e.g. stuff like
# 
# write(*,*) "Continuing into"// &
# #ifdef(ATMOS)
#  & "an ifdef"
# #endif
#
# Adding -traditional is a work around for this
# 
# Further to this removing lines from the source file will mess up line
# information in debuggers & tracebacks. Adding the -P flag means that no line
# information is produced by the preprocessor - instead of refering to the
# original source file line numbers will refer to lines in the preprocessed
# source file.
bld::tool::fpp          cpp
bld::tool::fppflags     -traditional-cpp -P

# The following are set within the bindings.
%fc_serial              ifort
%fc_mpp                 mpif90
%cc_serial              icc
%cc_mpp                 mpicc
%ld_serial              ifort
%ld_mpp                 mpif90

# Mandatory optimization flags
%fflags_opt_debug       -O0 -xHost -g -traceback -fp-model precise -ftz
%fflags_opt_safe        -O2 -xHost -g -traceback -fp-model precise -ftz
%fflags_opt_high        -O3 -xHost -g -traceback

# GCOM library - requires gcom module to be loaded
%fflags_gcom_mpp  
%ldflags_gcom_mpp       -lgcom
%fflags_gcom_serial     
%ldflags_gcom_serial    -lgcom_serial

# NetCDF library - requires netcdf module to be loaded
%ldflags_netcdf         -lnetcdff -lnetcdf

# Oasis3 library - requires Oasis module to be loaded
%fflags_oasis           
%ldflags_oasis          -lpsmile.MPI1 -lmpp_io

# Mandatory exposed variables
%fflags64_mpp           -i8 -r8 -std95 %fflags_oasis %fflags_gcom_mpp
%fflags64_serial        -i8 -r8 -std95 %fflags_oasis %fflags_gcom_serial
%fflags32_mpp           -std95
%fflags32_serial        -std95 

%ldflags64_mpp          -g -traceback %ldflags_gcom_mpp %ldflags_oasis %ldflags_netcdf -ldummygrib
%ldflags64_serial       -g -traceback %ldflags_gcom_serial %ldflags_netcdf -ldummygrib

%ldflags32_mpp          %ldflags64_mpp
%ldflags32_serial       %ldflags64_serial
